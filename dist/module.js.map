{"mappings":"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","sources":["lib/index.ts","lib/Praxy.ts"],"sourcesContent":["export * from './Praxy';\n","import {\n  Data,\n  Listeners,\n  Components,\n  AppContext,\n  IListener,\n  OnEvents,\n  OnFire,\n  Component,\n} from './types';\n\nexport class Praxy {\n  private data: Data;\n  private proxy: Data;\n  private listeners: Listeners = {};\n  private components: Components = {};\n\n  constructor(context?: AppContext) {\n    this.data = context?.data ?? {};\n\n    this.proxy = new Proxy(this.data, {\n      set: (data, _key, value) => {\n        const key = String(_key);\n\n        if (this.listeners[key] != null && data[key] != value) {\n          this.listeners[key]({data, key, value, self: this});\n        }\n\n        data[key] = value;\n\n        return true;\n      },\n    });\n  }\n\n  public set(\n    key: string,\n    value: unknown,\n    listener?: (context: IListener) => unknown\n  ): void {\n    if (this.listeners[key] == null && listener != null) {\n      this.listeners[key] = listener;\n    }\n\n    this.update(`[a-text=\"${key}\"]`, value);\n\n    this.proxy[key] = value;\n  }\n\n  public get(key: string): unknown {\n    return this.proxy[key];\n  }\n\n  /**\n   * Listen for data changes\n   * @param key\n   * @param listener\n   *\n   * @example\n   * App.listen('name', ({value}) => {\n   *   console.log('Value of \"name\" changed to: ', value);\n   * });\n   */\n  public listen(key: string, listener: (context: IListener) => void): void {\n    if (this.listeners[key] != null) {\n      return;\n    }\n\n    this.set(key, this.get(key), listener);\n  }\n\n  /**\n   * Bind an event on a `HTMLInputElement` to some actions\n   * @param event\n   * @param target\n   * @param fire\n   *\n   * @example\n   * .on('input', '[name=\"test-input\"]', ({self, target}) => {\n   *   self.set('name', target.value);\n   * });\n   */\n  public on(event: OnEvents, target: string, fire: OnFire): Praxy {\n    const events = ['click', 'input', 'change', 'select'];\n    const el = document.querySelector(target);\n\n    if (el == null || fire == null) {\n      console.error(`Praxy->on: No possible matches for ${target}`);\n\n      return this;\n    }\n\n    if (!events.includes(event)) {\n      throw new Error(`${event} is not a valid event`);\n    }\n\n    el.addEventListener(\n      event,\n      async ({target}) =>\n        await fire({\n          self: this,\n          target: target as HTMLInputElement,\n        })\n    );\n\n    return this;\n  }\n\n  /**\n   * Bind a value to multiple targets\n   * @param targets DOM selector or key in data\n   * @param value\n   *\n   * @example\n   * App.bind(['name', '[name=\"input-1\"]'], 'some value');\n   */\n  public bind(targets: string[], value: unknown): void {\n    targets.forEach((target: string) => {\n      if (this.data[target] != null) {\n        this.set(target, value);\n      }\n\n      if (this.getElements(target) != null) {\n        this.update(target, value);\n      }\n    });\n  }\n\n  /**\n   * Update DOM elements' value by target\n   * @param target\n   * @param value\n   *\n   * @example\n   * App.update('[name=\"test\"]', 'some value');\n   */\n  private update(target: string, value: unknown): void {\n    const els = this.getElements(target);\n\n    if (els == null) {\n      return;\n    }\n\n    els.forEach((el) => {\n      switch (el.nodeName) {\n        case 'INPUT':\n          (el as HTMLInputElement).value = `${value}`;\n          break;\n\n        default:\n          el.textContent = `${value}`;\n      }\n    });\n  }\n\n  public component(cmpt: Component): Praxy {\n    if (this.componentExists(cmpt.name)) {\n      throw new Error(`Component \"${cmpt.name}\" already exists`);\n    }\n\n    this.components[cmpt.name] = cmpt;\n\n    for (const key in this.components[cmpt.name].data) {\n      if (this.data[key] != null) {\n        throw new Error(\n          `You are not allowed to override data for property \\`${key}\\` with \"${this.components[key].data[key]}\" in ${this.components[key].name}.`\n        );\n      }\n\n      this.data[key] = this.components[cmpt.name].data[key];\n    }\n\n    const el = document.querySelector(cmpt.target ?? '#app');\n\n    if (el == null) {\n      throw new Error(`Your target parent ${cmpt.target} does not exist`);\n    }\n\n    const regex = /{{[A-Z]+}}/gi;\n    const regexMatches = cmpt.template.match(regex);\n\n    if (regexMatches == null || regexMatches.length === 0) {\n      el.insertAdjacentHTML('beforeend', cmpt.template);\n\n      return this;\n    }\n\n    const matches = regexMatches.map((x) =>\n      x.replace('{{', '').replace('}}', '')\n    );\n    const exists = matches.every((x) => this.data[x] != null);\n\n    if (!exists) {\n      throw new Error('Some of your interpolation keys does not exist');\n    }\n\n    let template: string;\n    matches.forEach((x) => {\n      template = (template ?? cmpt.template).replaceAll(\n        `{{${x}}}`,\n        `<span a-text=\"${x}\">${this.get(x)}</span>`\n      );\n    });\n\n    el.insertAdjacentHTML('beforeend', template);\n\n    return this;\n  }\n\n  public componentExists(name: string): boolean {\n    return this.components[name] != null;\n  }\n\n  private getElements(target: string): NodeList | null {\n    const els = document.querySelectorAll(target);\n\n    if (els == null || els.length === 0) {\n      return;\n    }\n\n    return els;\n  }\n}\n"],"names":[],"version":3,"file":"module.js.map"}